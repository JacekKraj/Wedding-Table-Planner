[{"C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\index.js":"1","C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\App.js":"2","C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\registerServiceWorker.js":"3","C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\reducers\\authentication.js":"4","C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\reducers\\modalsVisibility.js":"5","C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\fireConfig.js":"6","C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\actions\\index.js":"7","C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\actions\\actionTypes.js":"8","C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\components\\yourProjects\\YourProjects.js":"9","C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\utility\\Toasts\\toasts.js":"10","C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\components\\yourProjects\\project\\Project.js":"11","C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\components\\UI\\spinner\\Spinner.js":"12","C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\components\\register\\Register.js":"13","C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\components\\login\\Login.js":"14","C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\actions\\modalsVisibility.js":"15","C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\actions\\authentication.js":"16","C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\components\\mainPageLogoBar\\MainPageLogoBar.js":"17","C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\components\\yourProjects\\projectLink\\ProjectLink.js":"18","C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\components\\UI\\backdrop\\Backdrop.js":"19","C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\components\\UI\\modal\\Modal.js":"20","C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\components\\yourProjects\\project\\navigation\\Navigation.js":"21","C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\components\\UI\\infoModal\\InfoModal.js":"22","C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\components\\yourProjects\\project\\rectangularTable\\RectangularTable.js":"23","C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\components\\yourProjects\\project\\roundTable\\RoundTable.js":"24","C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\components\\yourProjects\\addNewProject\\AddNewProject.js":"25","C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\utility\\myFormikInput\\MyFormikInput.js":"26","C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\components\\UI\\input\\Input.js":"27","C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\components\\UI\\button\\Button.js":"28","C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\components\\logoBar\\LogoBar.js":"29","C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\components\\UI\\errorBox\\ErrorBox.js":"30","C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\utility\\myFormikCheckbox\\MyFormikCheckbox.js":"31","C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\components\\yourProjects\\project\\navigation\\yourProfile\\YourProfile.js":"32","C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\components\\yourProjects\\project\\navigation\\navButton\\NavButton.js":"33","C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\components\\yourProjects\\project\\tableFunctionsLink\\TableFunctionsLink.js":"34","C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\components\\yourProjects\\project\\editRoundTableModal\\EditRoundTableModal.js":"35","C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\components\\yourProjects\\project\\roundTable\\roundSeat\\RoundSeat.js":"36","C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\components\\yourProjects\\project\\rectangularTable\\rectangularSit\\RectangularSit.js":"37","C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\components\\yourProjects\\project\\editRectangularTableModal\\EditRectangularTableModal.js":"38","C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\components\\yourProjects\\project\\sitNameForm\\SitNameForm.js":"39","C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\components\\yourProjects\\project\\tableFunctionsLink\\tableFunctions\\TableFunctions.js":"40","C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\components\\yourProjects\\project\\tableFunctionsLink\\tableFunctions\\tableFunction\\TableFunction.js":"41","C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\components\\help\\Help.js":"42","C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\components\\help\\question\\Question.js":"43","C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\components\\contact\\Contact.js":"44"},{"size":821,"mtime":1602866145537,"results":"45","hashOfConfig":"46"},{"size":4717,"mtime":1610806675626,"results":"47","hashOfConfig":"46"},{"size":4384,"mtime":1599560394190,"results":"48","hashOfConfig":"46"},{"size":2060,"mtime":1604403436182,"results":"49","hashOfConfig":"46"},{"size":1548,"mtime":1603202554119,"results":"50","hashOfConfig":"46"},{"size":503,"mtime":1610632179853,"results":"51","hashOfConfig":"46"},{"size":349,"mtime":1602937394477,"results":"52","hashOfConfig":"46"},{"size":991,"mtime":1602937314525,"results":"53","hashOfConfig":"46"},{"size":3932,"mtime":1610631058383,"results":"54","hashOfConfig":"46"},{"size":521,"mtime":1610628447891,"results":"55","hashOfConfig":"46"},{"size":14589,"mtime":1610719151095,"results":"56","hashOfConfig":"46"},{"size":184,"mtime":1610631628032,"results":"57","hashOfConfig":"46"},{"size":4833,"mtime":1610631531820,"results":"58","hashOfConfig":"46"},{"size":3498,"mtime":1610631510452,"results":"59","hashOfConfig":"46"},{"size":851,"mtime":1603202672214,"results":"60","hashOfConfig":"46"},{"size":2630,"mtime":1603366188214,"results":"61","hashOfConfig":"46"},{"size":768,"mtime":1610631484361,"results":"62","hashOfConfig":"46"},{"size":721,"mtime":1610631073215,"results":"63","hashOfConfig":"46"},{"size":294,"mtime":1610631545424,"results":"64","hashOfConfig":"46"},{"size":276,"mtime":1610631616704,"results":"65","hashOfConfig":"46"},{"size":3371,"mtime":1610631199432,"results":"66","hashOfConfig":"46"},{"size":1038,"mtime":1610631586665,"results":"67","hashOfConfig":"46"},{"size":4961,"mtime":1610631254569,"results":"68","hashOfConfig":"46"},{"size":1902,"mtime":1610631291479,"results":"69","hashOfConfig":"46"},{"size":6050,"mtime":1610631095120,"results":"70","hashOfConfig":"46"},{"size":704,"mtime":1610631019969,"results":"71","hashOfConfig":"46"},{"size":452,"mtime":1610631602418,"results":"72","hashOfConfig":"46"},{"size":362,"mtime":1610631558637,"results":"73","hashOfConfig":"46"},{"size":776,"mtime":1610722078214,"results":"74","hashOfConfig":"46"},{"size":277,"mtime":1610631576179,"results":"75","hashOfConfig":"46"},{"size":396,"mtime":1610631002035,"results":"76","hashOfConfig":"46"},{"size":3281,"mtime":1610631217732,"results":"77","hashOfConfig":"46"},{"size":529,"mtime":1610631234066,"results":"78","hashOfConfig":"46"},{"size":658,"mtime":1610719159842,"results":"79","hashOfConfig":"46"},{"size":2560,"mtime":1610631179924,"results":"80","hashOfConfig":"46"},{"size":1151,"mtime":1610631307200,"results":"81","hashOfConfig":"46"},{"size":1088,"mtime":1610631261458,"results":"82","hashOfConfig":"46"},{"size":7171,"mtime":1610631159559,"results":"83","hashOfConfig":"46"},{"size":2111,"mtime":1610631327011,"results":"84","hashOfConfig":"46"},{"size":1455,"mtime":1602674427511,"results":"85","hashOfConfig":"46"},{"size":339,"mtime":1610631401690,"results":"86","hashOfConfig":"46"},{"size":1180,"mtime":1610722681633,"results":"87","hashOfConfig":"46"},{"size":329,"mtime":1610721697264,"results":"88","hashOfConfig":"46"},{"size":633,"mtime":1610807182669,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"otczfq",{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"92"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"92"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"92"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"92"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\index.js",[],["183","184"],"C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\App.js",["185"],"C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\registerServiceWorker.js",[],"C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\reducers\\authentication.js",[],"C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\reducers\\modalsVisibility.js",[],"C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\fireConfig.js",[],"C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\actions\\index.js",[],"C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\actions\\actionTypes.js",[],"C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\components\\yourProjects\\YourProjects.js",["186","187","188"],"import React, { Fragment, useState, useEffect, useContext } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { toast, Zoom } from \"react-toastify\";\r\nimport firebase from \"firebase\";\r\n\r\nimport MainPageLogoBar from \"./../mainPageLogoBar/MainPageLogoBar\";\r\nimport classes from \"./yourProjects.module.scss\";\r\nimport ProjectLink from \"./projectLink/ProjectLink\";\r\nimport Backdrop from \"./../UI/backdrop/Backdrop\";\r\nimport Modal from \"./../UI/modal/Modal\";\r\nimport AddNewProject from \"./addNewProject/AddNewProject\";\r\nimport Spinner from \"./../UI/spinner/Spinner\";\r\nimport { ProjectsContext } from \"./../../App\";\r\nimport InfoModal from \"./../UI/infoModal/InfoModal\";\r\nimport { showSuccessToast, showFailToast } from \"./../../utility/Toasts/toasts\";\r\n\r\nconst YourProjects = (props) => {\r\n  const [projects, setProjects] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n  const [projectPath, setProjectPath] = useState(null);\r\n\r\n  const projs = useContext(ProjectsContext);\r\n\r\n  const openDeleteModalHandler = (path) => {\r\n    setShowDeleteModal(true);\r\n    setProjectPath(path);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.fireUser) {\r\n      if (projs.projectsNames) {\r\n        const arr = Array.from(Object.keys(projs.projectsNames));\r\n        let project = arr.map((el, index) => {\r\n          return <ProjectLink key={index} projectName={el} openDeleteModalHandler={openDeleteModalHandler} />;\r\n        });\r\n        setProjects(project);\r\n      } else {\r\n        setProjects(true);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const removeProjectHandler = () => {\r\n    firebase\r\n      .database()\r\n      .ref(`${props.fireUser.uid}/${projectPath}`)\r\n      .remove()\r\n      .then(() => {\r\n        setShowModal(false);\r\n        showSuccessToast(\r\n          <div className={classes.toast}>\r\n            <p>\r\n              Project has been removed<i class=\"far fa-check-circle\"></i>\r\n            </p>\r\n          </div>\r\n        );\r\n        projs.reloadProjects(Math.random());\r\n      })\r\n      .catch((e) => {\r\n        showFailToast(\r\n          <div className={classes.toast}>\r\n            <p>{e.message}</p>\r\n          </div>\r\n        );\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {showDeleteModal ? (\r\n        <InfoModal\r\n          show={showDeleteModal}\r\n          positiveClick={() => {\r\n            setShowDeleteModal(false);\r\n          }}\r\n          negativeClick={removeProjectHandler}\r\n          btnPositiveText=\"Cancel\"\r\n          btnNegativeText=\"Delete\"\r\n          text=\"Are your sure you want to delete this project? All data will be lost.\"\r\n        />\r\n      ) : null}\r\n      <Backdrop\r\n        show={showModal || showDeleteModal}\r\n        click={() => {\r\n          setShowDeleteModal(false);\r\n          setShowModal(false);\r\n        }}\r\n      ></Backdrop>\r\n      <Modal show={showModal}>\r\n        <AddNewProject projectsNames={projs.projectsNames} />\r\n      </Modal>\r\n      <MainPageLogoBar />\r\n      <div className={classes.container}>\r\n        <h2 className={classes.description}>Your projects</h2>\r\n        <div className={classes.yourProjects}>\r\n          {projects ? (\r\n            <Fragment>\r\n              <div\r\n                className={classes.newProject}\r\n                onClick={() => {\r\n                  setShowModal(true);\r\n                }}\r\n              >\r\n                <div className={classes.text}>\r\n                  <i class=\"fas fa-plus\" className={classes.icon}></i>\r\n                  <p className={classes.desc}>Add project</p>\r\n                </div>\r\n              </div>\r\n              {projects}\r\n            </Fragment>\r\n          ) : (\r\n            <Spinner />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    fireUser: state.auth.fireUser,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(YourProjects);\r\n","C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\utility\\Toasts\\toasts.js",[],"C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\components\\yourProjects\\project\\Project.js",["189","190"],"import React, { useEffect, useState, useMemo, useContext, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport firebase from \"firebase\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { useBeforeunload } from \"react-beforeunload\";\r\n\r\nimport Navigation from \"./navigation/Navigation\";\r\nimport classes from \"./project.module.scss\";\r\nimport RectangularTable from \"./rectangularTable/RectangularTable\";\r\nimport RoundTable from \"./roundTable/RoundTable\";\r\nimport Backdrop from \"./../../UI/backdrop/Backdrop\";\r\nimport InfoModal from \"../../UI/infoModal/InfoModal\";\r\nimport * as actions from \"./../../../actions/index\";\r\nimport { ProjectsContext } from \"./../../../App\";\r\nimport { showSuccessToast, showFailToast } from \"./../../../utility/Toasts/toasts\";\r\n\r\nexport const TableFunctionsContext = React.createContext(null);\r\nexport const SeatLabelsContext = React.createContext(null);\r\n\r\nconst Project = (props) => {\r\n  const [projectDataArr, setProjectDataArr] = useState([{}, {}]);\r\n  const [rectangularTables, setRectangularTables] = useState(null);\r\n  const [roundTables, setRoundTables] = useState(null);\r\n  const [projectSaved, setProjectSaved] = useState(true);\r\n\r\n  const projs = useContext(ProjectsContext);\r\n\r\n  const project = useRef(null);\r\n\r\n  useBeforeunload((e) => {\r\n    if (!projectSaved) {\r\n      e.preventDefault();\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    setProjectDataArr(createProjectDataArray);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let rectTables;\r\n    let rndTables;\r\n\r\n    if (projectDataArr[0].tables) {\r\n      rectTables = projectDataArr[0].tables.map((el, index) => {\r\n        return (\r\n          <RectangularTable\r\n            id={el.tableNr}\r\n            key={el.tableNr}\r\n            hSeats={el.horizontalSeats}\r\n            vSeats={el.verticalSeats}\r\n            rotation={el.rotation}\r\n            xPosition={el.tablePositionX}\r\n            yPosition={el.tablePositionY}\r\n            rules={el.rules}\r\n            seatLabels={el.seatLabels}\r\n            mouseDownHandler={mouseDownHandler}\r\n            changeTableSizeHandler={changeRectangularTableSizeHandler}\r\n            rotationTimes={el.rotationTimes}\r\n          />\r\n        );\r\n      });\r\n    }\r\n\r\n    if (projectDataArr[1].tables) {\r\n      rndTables = projectDataArr[1].tables.map((el, index) => {\r\n        return (\r\n          <RoundTable\r\n            id={el.tableNr}\r\n            key={el.tableNr}\r\n            seats={el.seats}\r\n            rotation={el.rotation}\r\n            xPosition={el.tablePositionX}\r\n            yPosition={el.tablePositionY}\r\n            seatLabels={el.seatLabels}\r\n            mouseDownHandler={mouseDownHandler}\r\n            rotationTimes={el.rotationTimes}\r\n            changeTableSizeHandler={changeRoundTableSizeHandler}\r\n          />\r\n        );\r\n      });\r\n    }\r\n    setRectangularTables(rectTables);\r\n    setRoundTables(rndTables);\r\n  }, [projectDataArr]);\r\n\r\n  const createProjectDataArray = useMemo(() => {\r\n    return [{ ...props.projectData.rectangular }, { ...props.projectData.round }];\r\n  }, [props.projectData]);\r\n\r\n  const returnTableType = (type) => {\r\n    const tableType = type === \"rectangular\" ? projectDataArr[0] : projectDataArr[1];\r\n    const otherType = type === \"rectangular\" ? projectDataArr[1] : projectDataArr[0];\r\n    return { tableType: tableType, otherType: otherType };\r\n  };\r\n\r\n  const passDataToProjectDataArr = (tables, tableId, type, newTableProps) => {\r\n    type === \"rectangular\"\r\n      ? setProjectDataArr([\r\n          {\r\n            number: tables.tableType.number,\r\n            tables: tables.tableType.tables.filter((el) => el.tableNr !== parseInt(tableId, 10)).concat(newTableProps),\r\n          },\r\n          { ...tables.otherType },\r\n        ])\r\n      : setProjectDataArr([\r\n          { ...tables.otherType },\r\n          {\r\n            number: tables.tableType.number,\r\n            tables: tables.tableType.tables.filter((el) => el.tableNr !== parseInt(tableId, 10)).concat(newTableProps),\r\n          },\r\n        ]);\r\n  };\r\n\r\n  const getTableCordsHandler = (cords, id, type) => {\r\n    const tables = returnTableType(type);\r\n    const table = tables.tableType.tables.filter((el) => el.tableNr === parseInt(id, 10));\r\n    const newTableProps = { ...table[0] };\r\n    newTableProps.tablePositionX = cords.x;\r\n    newTableProps.tablePositionY = cords.y;\r\n\r\n    passDataToProjectDataArr(tables, id, type, newTableProps);\r\n    setProjectSaved(false);\r\n  };\r\n\r\n  const removeTableHandler = (id, type) => {\r\n    const tables = returnTableType(type);\r\n\r\n    type === \"rectangular\"\r\n      ? setProjectDataArr([\r\n          {\r\n            number: tables.tableType.number - 1,\r\n            tables: tables.tableType.tables.filter((el) => el.tableNr !== id),\r\n          },\r\n          { ...tables.otherType },\r\n        ])\r\n      : setProjectDataArr([\r\n          { ...tables.otherType },\r\n          {\r\n            number: tables.tableType.number - 1,\r\n            tables: tables.tableType.tables.filter((el) => el.tableNr !== id),\r\n          },\r\n        ]);\r\n    setProjectSaved(false);\r\n\r\n    showSuccessToast(\r\n      <div className={classes.toast}>\r\n        <p>Table has been removed</p>\r\n        <i class=\"far fa-check-circle\"></i>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const rotateTableHandler = (id, type, rot) => {\r\n    const tables = returnTableType(type);\r\n\r\n    const table = tables.tableType.tables.filter((el) => el.tableNr === parseInt(id, 10));\r\n    const newTableProps = { ...table[0] };\r\n    newTableProps.rotation = newTableProps.rotation + parseFloat(rot, 10);\r\n    newTableProps.rotationTimes++;\r\n\r\n    passDataToProjectDataArr(tables, id, type, newTableProps);\r\n    setProjectSaved(false);\r\n  };\r\n\r\n  const mouseDownHandler = (event, table, rotationTimes) => {\r\n    if (true) {\r\n      table.current.ondragstart = function () {\r\n        return false;\r\n      };\r\n\r\n      table.current.style.position = \"abosulte\";\r\n      table.current.style.zIndex = \"1000\";\r\n\r\n      const moveAt = (pageX, pageY) => {\r\n        if (rotationTimes % 4 === 0 || rotationTimes % 4 === 2) {\r\n          table.current.style.left = pageX - table.current.offsetWidth / 2 + \"px\";\r\n          table.current.style.top = pageY - table.current.offsetHeight / 3 + \"px\";\r\n        } else {\r\n          table.current.style.left = pageX - table.current.offsetWidth / 5 + \"px\";\r\n          table.current.style.top = pageY - table.current.offsetHeight / 2 + \"px\";\r\n        }\r\n      };\r\n\r\n      moveAt(event.pageX, event.pageY);\r\n\r\n      const onMouseMove = (event) => {\r\n        moveAt(event.pageX, event.pageY);\r\n      };\r\n\r\n      document.addEventListener(\"mousemove\", onMouseMove);\r\n\r\n      table.current.onmouseup = (e) => {\r\n        document.removeEventListener(\"mousemove\", onMouseMove);\r\n        table.current.onmouseup = null;\r\n\r\n        getTableCordsHandler(\r\n          {\r\n            x: table.current.offsetLeft,\r\n            y: table.current.offsetTop,\r\n          },\r\n          table.current.dataset.id,\r\n          table.current.dataset.type\r\n        );\r\n      };\r\n    }\r\n    setProjectSaved(false);\r\n  };\r\n\r\n  const changeRectangularTableSizeHandler = (size, type, id, newRotation, newRules) => {\r\n    const tables = returnTableType(type);\r\n    const table = tables.tableType.tables.filter((el) => el.tableNr === parseInt(id, 10));\r\n\r\n    const newTableProps = { ...table[0] };\r\n    newTableProps.horizontalSeats = size.width;\r\n    newTableProps.verticalSeats = size.height;\r\n    newTableProps.rotationTimes = table[0].rotationTimes + newRotation;\r\n    newTableProps.rotation = newTableProps.rotationTimes * 90;\r\n    newTableProps.rules = newRules;\r\n\r\n    passDataToProjectDataArr(tables, id, type, newTableProps);\r\n    setProjectSaved(false);\r\n  };\r\n\r\n  const changeRoundTableSizeHandler = (seats, id, type) => {\r\n    const tables = returnTableType(type);\r\n    const table = tables.tableType.tables.filter((el) => el.tableNr === parseInt(id, 10));\r\n    const newTableProps = { ...table[0] };\r\n    newTableProps.seats = seats;\r\n\r\n    passDataToProjectDataArr(tables, id, type, newTableProps);\r\n    setProjectSaved(false);\r\n  };\r\n\r\n  const addRectangularSeatLabelHandler = (text, tableId, seatIndex, tableSide, type) => {\r\n    const tables = returnTableType(type);\r\n    const table = tables.tableType.tables.filter((el) => el.tableNr === parseInt(tableId, 10));\r\n\r\n    const newTableProps = { ...table[0] };\r\n    const oldTableLabelsProps = { ...newTableProps.seatLabels[tableSide] };\r\n    newTableProps.seatLabels = {\r\n      ...newTableProps.seatLabels,\r\n      [tableSide]: {\r\n        ...oldTableLabelsProps,\r\n        [seatIndex]: text,\r\n      },\r\n    };\r\n    passDataToProjectDataArr(tables, tableId, type, newTableProps);\r\n    setProjectSaved(false);\r\n  };\r\n\r\n  const addRoundSeatLabelHandler = (text, tableId, seatId, type) => {\r\n    const tables = returnTableType(type);\r\n    const table = tables.tableType.tables.filter((el) => el.tableNr === parseInt(tableId, 10));\r\n\r\n    const newTableProps = { ...table[0] };\r\n    newTableProps.seatLabels = {\r\n      ...newTableProps.seatLabels,\r\n      [seatId]: text,\r\n    };\r\n\r\n    passDataToProjectDataArr(tables, tableId, type, newTableProps);\r\n    setProjectSaved(false);\r\n  };\r\n\r\n  const clearProjectDataHandler = () => {\r\n    const newProjectDataRect = { ...projectDataArr[0] };\r\n    const newProjectDataRound = { ...projectDataArr[1] };\r\n    newProjectDataRect.number = 0;\r\n    newProjectDataRect.tables = [];\r\n    newProjectDataRound.number = 0;\r\n    newProjectDataRound.tables = [];\r\n\r\n    setProjectDataArr([newProjectDataRect, newProjectDataRound]);\r\n    showSuccessToast(\r\n      <div className={classes.toast}>\r\n        <p>Project has been cleared</p>\r\n        <i class=\"far fa-check-circle\"></i>\r\n      </div>\r\n    );\r\n    setProjectSaved(false);\r\n  };\r\n\r\n  const saveProjectDataHandler = () => {\r\n    firebase\r\n      .database()\r\n      .ref(`${props.fireUser.uid}/${props.path}/rectangular`)\r\n      .set(projectDataArr[0])\r\n      .then((response) => {\r\n        showSuccessToast(\r\n          <div className={classes.toast}>\r\n            <p>Project has been saved</p>\r\n            <i class=\"far fa-check-circle\"></i>\r\n          </div>\r\n        );\r\n        setProjectSaved(true);\r\n        props.onSaveCheckModalShow(false, null, true);\r\n        projs.reloadProjects(Math.random());\r\n      })\r\n      .catch((error) => {\r\n        showFailToast(<div className={classes.toast}>{error.message}</div>);\r\n      });\r\n\r\n    firebase\r\n      .database()\r\n      .ref(`${props.fireUser.uid}/${props.path}/round`)\r\n      .set(projectDataArr[1])\r\n      .then((response) => {})\r\n      .catch((error) => {\r\n        showFailToast(<div className={classes.toast}>{error.message}</div>);\r\n      });\r\n  };\r\n\r\n  const addRectangularTableHandler = () => {\r\n    const newProjectDataArr = { ...projectDataArr[0] };\r\n    newProjectDataArr.number++;\r\n\r\n    if (!newProjectDataArr.tables) {\r\n      newProjectDataArr.tables = [];\r\n    }\r\n\r\n    const newTable = {\r\n      horizontalSeats: 1,\r\n      verticalSeats: 10,\r\n      tableNr: newProjectDataArr.number - 1,\r\n      tablePositionX: 90,\r\n      tablePositionY: 270,\r\n      rotation: 0,\r\n      rotationTimes: 0,\r\n      rotatedManually: false,\r\n      rules: { top: true, bottom: true, left: true, right: true },\r\n      seatLabels: { top: { 0: \"\" }, right: { 0: \"\" }, bottom: { 0: \"\" }, left: { 0: \"\" } },\r\n    };\r\n\r\n    newProjectDataArr.tables = [...newProjectDataArr.tables, newTable];\r\n    setProjectDataArr([newProjectDataArr, { ...projectDataArr[1] }]);\r\n    showSuccessToast(\r\n      <div className={classes.toast}>\r\n        <p>Table has been added</p>\r\n        <i class=\"far fa-check-circle\"></i>\r\n      </div>\r\n    );\r\n    setProjectSaved(false);\r\n  };\r\n\r\n  const addRoundTableHandler = () => {\r\n    const newProjectDataArr = { ...projectDataArr[1] };\r\n    newProjectDataArr.number++;\r\n\r\n    if (!newProjectDataArr.tables) {\r\n      newProjectDataArr.tables = [];\r\n    }\r\n\r\n    const newTable = {\r\n      tableNr: newProjectDataArr.number - 1,\r\n      tablePositionX: 110,\r\n      tablePositionY: 565,\r\n      rotation: 0,\r\n      rotationTimes: 0,\r\n      seats: 7,\r\n      seatLabels: { 0: \"\" },\r\n    };\r\n\r\n    newProjectDataArr.tables = [...newProjectDataArr.tables, newTable];\r\n    setProjectDataArr([{ ...projectDataArr[0] }, newProjectDataArr]);\r\n    showSuccessToast(\r\n      <div className={classes.toast}>\r\n        <p>Table has been added</p>\r\n        <i class=\"far fa-check-circle\"></i>\r\n      </div>\r\n    );\r\n    setProjectSaved(false);\r\n  };\r\n\r\n  const leavePageHanlder = () => {\r\n    props.onLeave();\r\n    props.onSaveCheckModalShow(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <TableFunctionsContext.Provider\r\n        value={{\r\n          removeTable: removeTableHandler,\r\n          rotateTable: rotateTableHandler,\r\n        }}\r\n      >\r\n        <Navigation\r\n          email={props.userEmail}\r\n          projectsNames={props.projectsNames}\r\n          saveProjectDataHandler={saveProjectDataHandler}\r\n          clearProjectDataHandler={clearProjectDataHandler}\r\n          addRectangularTableHandler={addRectangularTableHandler}\r\n          addRoundTableHandler={addRoundTableHandler}\r\n          projectSaved={projectSaved}\r\n          projRef={project.current}\r\n        />\r\n\r\n        <SeatLabelsContext.Provider\r\n          value={{ addRectangularSeatLabelHandler: addRectangularSeatLabelHandler, addRoundSeatLabelHandler: addRoundSeatLabelHandler }}\r\n        >\r\n          <div ref={project}>\r\n            {rectangularTables}\r\n            {roundTables}\r\n          </div>\r\n        </SeatLabelsContext.Provider>\r\n      </TableFunctionsContext.Provider>\r\n      <Backdrop\r\n        show={props.isSaveCheckModalVisible}\r\n        click={() => {\r\n          props.onSaveCheckModalShow(false);\r\n        }}\r\n      />\r\n      <InfoModal\r\n        show={props.isSaveCheckModalVisible}\r\n        negativeClick={leavePageHanlder}\r\n        positiveClick={() => {\r\n          props.onSaveCheckModalShow(false);\r\n        }}\r\n        text=\"Are your sure you want to leave without saving? All chagnes will be lost.\"\r\n        btnPositiveText=\"Stay\"\r\n        btnNegativeText=\"Leave\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    fireUser: state.auth.fireUser,\r\n    isSaveCheckModalVisible: state.modVis.saveCheckModalVisible,\r\n    onLeave: state.modVis.leaveHandler,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onSaveCheckModalShow: (show) => dispatch(actions.editSaveCheckModalVisibility(show)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Project);\r\n","C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\components\\UI\\spinner\\Spinner.js",[],"C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\components\\register\\Register.js",[],"C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\components\\login\\Login.js",[],"C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\actions\\modalsVisibility.js",[],"C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\actions\\authentication.js",[],"C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\components\\mainPageLogoBar\\MainPageLogoBar.js",[],"C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\components\\yourProjects\\projectLink\\ProjectLink.js",[],"C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\components\\UI\\backdrop\\Backdrop.js",[],"C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\components\\UI\\modal\\Modal.js",[],"C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\components\\yourProjects\\project\\navigation\\Navigation.js",["191"],"import React, { useState, Fragment } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport classnames from \"classnames\";\r\nimport { connect } from \"react-redux\";\r\nimport { useReactToPrint } from \"react-to-print\";\r\nimport ReactToPrint from \"react-to-print\";\r\n\r\nimport classes from \"./navigation.module.scss\";\r\nimport YourProfile from \"./yourProfile/YourProfile\";\r\nimport * as actions from \"./../../../../actions/index\";\r\nimport NavButton from \"./navButton/NavButton\";\r\n\r\nconst Navigation = (props) => {\r\n  const history = useHistory();\r\n  const [fullNav, setFullNav] = useState(false);\r\n\r\n  const returnToProjects = () => {\r\n    history.push(\"/yourProjects\");\r\n  };\r\n\r\n  const handlePrint = useReactToPrint({\r\n    content: () => props.projRef,\r\n  });\r\n\r\n  const checkIfSavedHandler = () => {\r\n    if (props.projectSaved) {\r\n      returnToProjects();\r\n    } else {\r\n      props.onSaveCheckModalShow(true, returnToProjects);\r\n    }\r\n  };\r\n\r\n  const showNavHandler = () => {\r\n    setFullNav(!fullNav);\r\n  };\r\n\r\n  let logo = <p className={classes.logo}>W</p>;\r\n\r\n  logo = fullNav ? <p className={classes.fullLogo}>Wedding</p> : logo;\r\n\r\n  let navTurner = (\r\n    <div className={classnames(classes.turner, classes.turnerOn)} onClick={showNavHandler}>\r\n      <i class=\"fas fa-angle-right\"></i>\r\n    </div>\r\n  );\r\n\r\n  navTurner = fullNav ? (\r\n    <div className={classnames(classes.turner, classes.turnerOff)} onClick={showNavHandler}>\r\n      <i class=\"fas fa-angle-left\"></i>\r\n    </div>\r\n  ) : (\r\n    navTurner\r\n  );\r\n\r\n  return (\r\n    <Fragment>\r\n      <YourProfile checkIfSavedHandler={checkIfSavedHandler} email={props.email} projectSaved={props.projectSaved} />\r\n      <div className={classnames(classes.container, fullNav && classes.containerFull)}>\r\n        {logo}\r\n        <div className={classes.pageButtons}>\r\n          <NavButton click={props.clearProjectDataHandler} text=\"Clear Project\" fullNav={fullNav}>\r\n            <i class=\"fas fa-trash\"></i>\r\n          </NavButton>\r\n          <NavButton click={props.addRectangularTableHandler} text=\"Add rect table\" fullNav={fullNav}>\r\n            <div className={classes.rectangle}></div>\r\n          </NavButton>\r\n          <NavButton click={props.addRoundTableHandler} text=\"Add round table\" fullNav={fullNav}>\r\n            <div className={classes.round}></div>\r\n          </NavButton>\r\n          <NavButton click={props.saveProjectDataHandler} text=\"Save Changes\" fullNav={fullNav}>\r\n            <i class=\"fas fa-save\"></i>\r\n          </NavButton>\r\n\r\n          <NavButton click={handlePrint} text=\"Print Project\" fullNav={fullNav}>\r\n            <i class=\"fas fa-print\"></i>\r\n          </NavButton>\r\n        </div>\r\n        <div className={classes.returnButton} onClick={checkIfSavedHandler}>\r\n          <i class=\"fas fa-arrow-left\"></i>\r\n          <span className={classnames(classes.buttonName, fullNav && classes.buttonNameVisible)}>Return to projects</span>\r\n          <span className={classnames(classes.info, !fullNav && classes.buttonInfo, classes.return)}>Return to projects</span>\r\n        </div>\r\n        {navTurner}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onSaveCheckModalShow: (show, onLeave) => dispatch(actions.editSaveCheckModalVisibility(show, onLeave)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Navigation);\r\n","C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\components\\UI\\infoModal\\InfoModal.js",[],"C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\components\\yourProjects\\project\\rectangularTable\\RectangularTable.js",[],"C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\components\\yourProjects\\project\\roundTable\\RoundTable.js",[],"C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\components\\yourProjects\\addNewProject\\AddNewProject.js",[],"C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\utility\\myFormikInput\\MyFormikInput.js",[],"C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\components\\UI\\input\\Input.js",[],"C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\components\\UI\\button\\Button.js",[],"C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\components\\logoBar\\LogoBar.js",[],"C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\components\\UI\\errorBox\\ErrorBox.js",[],"C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\utility\\myFormikCheckbox\\MyFormikCheckbox.js",[],"C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\components\\yourProjects\\project\\navigation\\yourProfile\\YourProfile.js",[],"C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\components\\yourProjects\\project\\navigation\\navButton\\NavButton.js",[],"C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\components\\yourProjects\\project\\tableFunctionsLink\\TableFunctionsLink.js",[],"C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\components\\yourProjects\\project\\editRoundTableModal\\EditRoundTableModal.js",[],"C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\components\\yourProjects\\project\\roundTable\\roundSeat\\RoundSeat.js",[],"C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\components\\yourProjects\\project\\rectangularTable\\rectangularSit\\RectangularSit.js",[],"C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\components\\yourProjects\\project\\editRectangularTableModal\\EditRectangularTableModal.js",["192"],"import React, { useState, Fragment, useMemo } from \"react\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport classnames from \"classnames\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport MyFormikInput from \"../../../../utility/myFormikInput/MyFormikInput\";\r\nimport Input from \"../../../UI/input/Input\";\r\nimport Modal from \"../../../UI/modal/Modal\";\r\nimport Button from \"../../../UI/button/Button\";\r\nimport classes from \"./editRectangularTableModal.module.scss\";\r\nimport MyFormikCheckbox from \"../../../../utility/myFormikCheckbox/MyFormikCheckbox\";\r\nimport ErrorBox from \"../../../UI/errorBox/ErrorBox\";\r\nimport * as actions from \"../../../../actions/index\";\r\nimport Backdrop from \"./../../../UI/backdrop/Backdrop\";\r\n\r\nconst EditProjectModal = (props) => {\r\n  const [error, setError] = useState(false);\r\n\r\n  const restOfRotationDivision = props.rotationTimes % 2;\r\n\r\n  const memoizedSidesRules = useMemo(() => {\r\n    let top, right, left, bottom;\r\n    if (props.rotationTimes % 4 === 0) {\r\n      top = !props.rules.top;\r\n      right = !props.rules.right;\r\n      bottom = !props.rules.bottom;\r\n      left = !props.rules.left;\r\n    } else if (props.rotationTimes % 4 === 1) {\r\n      top = !props.rules.left;\r\n      right = !props.rules.top;\r\n      bottom = !props.rules.right;\r\n      left = !props.rules.bottom;\r\n    } else if (props.rotationTimes % 4 === 2) {\r\n      top = !props.rules.bottom;\r\n      right = !props.rules.left;\r\n      bottom = !props.rules.top;\r\n      left = !props.rules.right;\r\n    } else if (props.rotationTimes % 4 === 3) {\r\n      top = !props.rules.right;\r\n      right = !props.rules.bottom;\r\n      bottom = !props.rules.left;\r\n      left = !props.rules.top;\r\n    }\r\n    return {\r\n      top: top,\r\n      left: left,\r\n      right: right,\r\n      bottom: bottom,\r\n    };\r\n  }, [props.rotationTimes]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Backdrop click={props.onEditModalHide} show={props.isId === props.id} />\r\n      <Modal show={props.isId === props.id}>\r\n        <ErrorBox className={classnames(classes.errorBox, error && classes.errorBoxVisible)}>{error}</ErrorBox>\r\n        <Formik\r\n          initialValues={{\r\n            width: \"\",\r\n            height: \"\",\r\n            left: memoizedSidesRules.left,\r\n            right: memoizedSidesRules.right,\r\n            top: memoizedSidesRules.top,\r\n            bottom: memoizedSidesRules.bottom,\r\n          }}\r\n          onSubmit={(values) => {\r\n            if (\r\n              (values.width >= 1 && values.height >= 1 && values.width <= 25 && values.height <= 25) ||\r\n              (values.width === \"\" && values.height === \"\")\r\n            ) {\r\n              setError(false);\r\n              let newRotation, width, height;\r\n              if (values.width === \"\" && values.height === \"\") {\r\n                width = props.hSeats;\r\n                height = props.vSeats;\r\n                newRotation = 0;\r\n              } else {\r\n                width = values.width < values.height ? values.width : values.height;\r\n                height = values.width >= values.height ? values.width : values.height;\r\n                if (!restOfRotationDivision) {\r\n                  newRotation = values.width < values.height ? 0 : 1;\r\n                } else {\r\n                  newRotation = values.width > values.height ? 0 : 1;\r\n                }\r\n              }\r\n\r\n              let top, right, left, bottom;\r\n\r\n              if ((props.rotationTimes + newRotation) % 4 === 0) {\r\n                top = !values.top;\r\n                right = !values.right;\r\n                bottom = !values.bottom;\r\n                left = !values.left;\r\n              } else if ((props.rotationTimes + newRotation) % 4 === 1) {\r\n                top = !values.right;\r\n                right = !values.bottom;\r\n                bottom = !values.left;\r\n                left = !values.top;\r\n              } else if ((props.rotationTimes + newRotation) % 4 === 2) {\r\n                top = !values.bottom;\r\n                right = !values.left;\r\n                bottom = !values.top;\r\n                left = !values.right;\r\n              } else if ((props.rotationTimes + newRotation) % 4 === 3) {\r\n                top = !values.left;\r\n                right = !values.top;\r\n                bottom = !values.right;\r\n                left = !values.bottom;\r\n              }\r\n\r\n              let newRules = {\r\n                top: top,\r\n                left: left,\r\n                right: right,\r\n                bottom: bottom,\r\n              };\r\n\r\n              props.changeTableSizeHandler(\r\n                { width: values.width === \"\" ? width : width, height: height },\r\n                \"rectangular\",\r\n                props.id,\r\n                newRotation,\r\n                newRules\r\n              );\r\n\r\n              props.onEditModalHide();\r\n            } else if (values.width > 25 || values.height > 25) {\r\n              setError(\"Maximal amount of seats is 25.\");\r\n            } else {\r\n              setError(\"Minimal amount of seats is 1.\");\r\n            }\r\n          }}\r\n          validationSchema={Yup.object({})}\r\n        >\r\n          {() => {\r\n            return (\r\n              <Form className={classes.container}>\r\n                <div className={classes.inputsSection}>\r\n                  <div className={classes.tableSizeInputs}>\r\n                    <p className={classes.caption}>Table size</p>\r\n                    <MyFormikInput\r\n                      name=\"width\"\r\n                      type=\"number\"\r\n                      label=\"Width:\"\r\n                      as={Input}\r\n                      placeholder={restOfRotationDivision ? props.vSeats : props.hSeats}\r\n                    />\r\n                    <MyFormikInput\r\n                      name=\"height\"\r\n                      type=\"number\"\r\n                      label=\"Height:\"\r\n                      placeholder={restOfRotationDivision ? props.hSeats : props.vSeats}\r\n                      as={Input}\r\n                    />\r\n                  </div>\r\n                  <div className={classes.tablePartsInputs}>\r\n                    <p className={classes.caption}>Disable table parts</p>\r\n                    <div className={classes.tableCheckboxes}>\r\n                      <MyFormikCheckbox name=\"top\" text=\"top\" />\r\n                      <MyFormikCheckbox name=\"right\" text=\"right\" />\r\n                      <MyFormikCheckbox name=\"bottom\" text=\"bottom\" />\r\n                      <MyFormikCheckbox name=\"left\" text=\"left\" />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <Button type=\"submit\" className={classes.button}>\r\n                  Save\r\n                </Button>\r\n              </Form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapDisptachToProps = (dispatch) => {\r\n  return {\r\n    onEditModalHide: () => dispatch(actions.editRectangularModalVisibility(false)),\r\n  };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isEditModal: state.modVis.editModalRectangularVisible,\r\n    isId: state.modVis.id,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDisptachToProps)(EditProjectModal);\r\n","C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\components\\yourProjects\\project\\sitNameForm\\SitNameForm.js",[],"C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\components\\yourProjects\\project\\tableFunctionsLink\\tableFunctions\\TableFunctions.js",[],"C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\components\\yourProjects\\project\\tableFunctionsLink\\tableFunctions\\tableFunction\\TableFunction.js",[],"C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\components\\help\\Help.js",[],"C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\components\\help\\question\\Question.js",[],"C:\\Users\\jacek\\Desktop\\moje-strony\\wesele-dzialajace\\src\\components\\contact\\Contact.js",[],{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","replacedBy":"196"},{"ruleId":"197","severity":1,"message":"198","line":60,"column":26,"nodeType":"199","endLine":72,"endColumn":15},{"ruleId":"200","severity":1,"message":"201","line":3,"column":10,"nodeType":"202","messageId":"203","endLine":3,"endColumn":15},{"ruleId":"200","severity":1,"message":"204","line":3,"column":17,"nodeType":"202","messageId":"203","endLine":3,"endColumn":21},{"ruleId":"197","severity":1,"message":"205","line":42,"column":6,"nodeType":"206","endLine":42,"endColumn":8,"suggestions":"207"},{"ruleId":"197","severity":1,"message":"208","line":38,"column":6,"nodeType":"206","endLine":38,"endColumn":8,"suggestions":"209"},{"ruleId":"197","severity":1,"message":"210","line":85,"column":6,"nodeType":"206","endLine":85,"endColumn":22,"suggestions":"211"},{"ruleId":"200","severity":1,"message":"212","line":6,"column":8,"nodeType":"202","messageId":"203","endLine":6,"endColumn":20},{"ruleId":"197","severity":1,"message":"213","line":51,"column":6,"nodeType":"206","endLine":51,"endColumn":27,"suggestions":"214"},"no-native-reassign",["215"],"no-negated-in-lhs",["216"],"react-hooks/exhaustive-deps","Assignments to the 'projRoutes' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","no-unused-vars","'toast' is defined but never used.","Identifier","unusedVar","'Zoom' is defined but never used.","React Hook useEffect has missing dependencies: 'projs.projectsNames' and 'props.fireUser'. Either include them or remove the dependency array.","ArrayExpression",["217"],"React Hook useEffect has a missing dependency: 'createProjectDataArray'. Either include it or remove the dependency array.",["218"],"React Hook useEffect has missing dependencies: 'changeRectangularTableSizeHandler', 'changeRoundTableSizeHandler', and 'mouseDownHandler'. Either include them or remove the dependency array.",["219"],"'ReactToPrint' is defined but never used.","React Hook useMemo has missing dependencies: 'props.rules.bottom', 'props.rules.left', 'props.rules.right', and 'props.rules.top'. Either include them or remove the dependency array.",["220"],"no-global-assign","no-unsafe-negation",{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},"Update the dependencies array to be: [projs.projectsNames, props.fireUser]",{"range":"229","text":"230"},"Update the dependencies array to be: [createProjectDataArray]",{"range":"231","text":"232"},"Update the dependencies array to be: [changeRectangularTableSizeHandler, changeRoundTableSizeHandler, mouseDownHandler, projectDataArr]",{"range":"233","text":"234"},"Update the dependencies array to be: [props.rotationTimes, props.rules.bottom, props.rules.left, props.rules.right, props.rules.top]",{"range":"235","text":"236"},[1602,1604],"[projs.projectsNames, props.fireUser]",[1446,1448],"[createProjectDataArray]",[2887,2903],"[changeRectangularTableSizeHandler, changeRoundTableSizeHandler, mouseDownHandler, projectDataArr]",[1825,1846],"[props.rotationTimes, props.rules.bottom, props.rules.left, props.rules.right, props.rules.top]"]